---
# Ansible Playbook for Home Assistant Configuration Deployment
# Deploys automations, scripts, and Python scripts to Home Assistant Green box

- name: Deploy Home Assistant Configurations
  hosts: homeassistant
  gather_facts: false
  vars:
    ha_config_dir: "/config"
    source_dir: "{{ playbook_dir }}/.."
    
  tasks:
    - name: Test Home Assistant connectivity
      uri:
        url: "http://{{ ansible_host }}:8123/api/"
        method: GET
        status_code: 200
        timeout: 10
      register: ha_api_test
      ignore_errors: true
      
    - name: Fail if Home Assistant is not accessible
      fail:
        msg: "Home Assistant is not accessible at http://{{ ansible_host }}:8123"
      when: ha_api_test.failed
      
    - name: Create Home Assistant directories
      file:
        path: "{{ ha_config_dir }}/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - automations
        - scripts
        - python_scripts
        
    - name: Deploy Python scripts
      copy:
        src: "{{ source_dir }}/python_scripts/{{ item }}"
        dest: "{{ ha_config_dir }}/python_scripts/{{ item }}"
        mode: '0644'
        backup: true
      loop: "{{ lookup('fileglob', source_dir + '/python_scripts/*.py') | map('basename') | list }}"
      when: lookup('fileglob', source_dir + '/python_scripts/*.py') | length > 0
      
    - name: Deploy automations
      copy:
        src: "{{ source_dir }}/automations/{{ item }}"
        dest: "{{ ha_config_dir }}/automations/{{ item }}"
        mode: '0644'
        backup: true
      loop: "{{ lookup('fileglob', source_dir + '/automations/*.yaml') | map('basename') | list }}"
      when: lookup('fileglob', source_dir + '/automations/*.yaml') | length > 0
      
    - name: Deploy scripts
      copy:
        src: "{{ source_dir }}/scripts/{{ item }}"
        dest: "{{ ha_config_dir }}/scripts/{{ item }}"
        mode: '0644'
        backup: true
      loop: "{{ lookup('fileglob', source_dir + '/scripts/*.yaml') | map('basename') | list }}"
      when: lookup('fileglob', source_dir + '/scripts/*.yaml') | length > 0
      
    - name: Backup existing configuration
      copy:
        src: "{{ ha_config_dir }}/configuration.yaml"
        dest: "{{ ha_config_dir }}/configuration.yaml.backup.{{ ansible_date_time.epoch }}"
        remote_src: true
        mode: '0644'
      ignore_errors: true
      
    - name: Update Home Assistant configuration
      blockinfile:
        path: "{{ ha_config_dir }}/configuration.yaml"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - Home Assistant Timer Management"
        block: |
          # Input helpers for timer state management
          input_text:
            timer_states:
              name: "Timer States Storage"
              initial: "{}"
              max: 10000

          # Python script configuration
          python_script:

          # Automation configuration
          automation: !include automations/

          # Script configuration  
          script: !include scripts/
        backup: true
      when: lookup('file', source_dir + '/configuration.yaml') is defined
      
    - name: Set proper permissions on Home Assistant config
      file:
        path: "{{ ha_config_dir }}"
        recurse: true
        owner: "{{ ansible_user_id | default('root') }}"
        group: "{{ ansible_user_id | default('root') }}"
        mode: '0755'
        
    - name: Restart Home Assistant
      shell: "ha core restart"
      async: 60
      poll: 0
      ignore_errors: true
      
    - name: Wait for Home Assistant to restart
      uri:
        url: "http://{{ ansible_host }}:8123/api/"
        method: GET
        status_code: 200
        timeout: 30
      register: ha_restart_test
      retries: 12
      delay: 10
      until: ha_restart_test is succeeded
      ignore_errors: true
      
    - name: Verify Home Assistant is running
      uri:
        url: "http://{{ ansible_host }}:8123/api/"
        method: GET
        status_code: 200
        timeout: 10
      register: ha_final_test
      
    - name: Display deployment status
      debug:
        msg: |
          Home Assistant deployment completed!
          URL: http://{{ ansible_host }}:8123
          Status: {{ 'SUCCESS' if ha_final_test is succeeded else 'FAILED - Check logs' }}
          
    - name: Fail if Home Assistant is not running
      fail:
        msg: "Home Assistant failed to restart properly"
      when: ha_final_test is failed
