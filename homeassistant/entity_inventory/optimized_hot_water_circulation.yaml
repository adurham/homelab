# Optimized Smart Hot Water Recirculation Control
# Enhanced version with temperature feedback, adaptive timing, and better efficiency

- id: 'optimized_hot_water_circulation'
  alias: 'Smart Hot Water Recirculation - Optimized'
  description: 'Runs recirculation pump on-demand with temperature feedback, adaptive timing, and occupancy-based control'
  triggers:
    # Trigger when occupancy is detected in any bathroom or kitchen
    - platform: state
      entity_id:
        - binary_sensor.guest_bathroom_occupancy
        - binary_sensor.half_bathroom_occupancy
        - binary_sensor.kitchen_occupancy_2
        - binary_sensor.main_bathroom_occupancy
      from: 'off'
      to: 'on'
      id: occupancy_detected
    # Trigger when water temperature drops below threshold (if sensor available)
    - platform: numeric_state
      entity_id: sensor.water_heater_temperature  # Adjust entity name as needed
      below: 110  # Fahrenheit - adjust as needed
      id: temperature_low
  conditions:
    # Global cooldown check - don't run if pump was recently used
    - condition: state
      entity_id: timer.water_heater_circulator_pump_cooldown
      state: 'idle'
    # Don't run if pump is already running
    - condition: state
      entity_id: switch.shelly1minig3_28372f21c1dc
      state: 'off'
  action:
    - choose:
        # When occupancy is detected - start circulation
        - conditions:
            - condition: trigger
              id: occupancy_detected
          sequence:
            - service: system_log.write
              data:
                message: 'Hot water circulation triggered by occupancy'
                level: info
            - service: script.adaptive_hot_water_circulation
        # When temperature is low - start circulation
        - conditions:
            - condition: trigger
              id: temperature_low
          sequence:
            - service: system_log.write
              data:
                message: 'Hot water circulation triggered by low temperature'
                level: info
            - service: script.adaptive_hot_water_circulation
    # Set global cooldown timer
    - service: timer.start
      target:
        entity_id: timer.water_heater_circulator_pump_cooldown
      data:
        duration: '00:30:00'  # 30-minute cooldown
  mode: single

# Adaptive circulation script
- id: 'adaptive_hot_water_circulation'
  alias: 'Adaptive Hot Water Circulation Script'
  description: 'Runs pump with adaptive timing based on time of day and occupancy'
  script:
    adaptive_hot_water_circulation:
      alias: 'Adaptive Hot Water Circulation'
      sequence:
        # Determine optimal pump duration based on time of day
        - choose:
            # Evening/Night - longer pump time for comfort
            - conditions:
                - condition: sun
                  after: sunset
                - condition: or
                  conditions:
                    - condition: state
                      entity_id: switch.kitchen_main_lights
                      state: 'on'
                    - condition: state
                      entity_id: switch.guest_bathroom_vanity_lights
                      state: 'on'
                    - condition: state
                      entity_id: switch.half_bathroom_vanity_lights
                      state: 'on'
              sequence:
                - variables:
                    pump_duration: '00:07:00'  # 7 minutes for evening comfort
                - service: system_log.write
                  data:
                    message: 'Evening hot water circulation - 7 minutes'
                    level: info
            # Daytime - shorter pump time for efficiency
            - conditions:
                - condition: sun
                  after: sunrise
              sequence:
                - variables:
                    pump_duration: '00:04:00'  # 4 minutes for daytime efficiency
                - service: system_log.write
                  data:
                    message: 'Daytime hot water circulation - 4 minutes'
                    level: info
            # Default - moderate pump time
            - sequence:
                - variables:
                    pump_duration: '00:05:00'  # 5 minutes default
                - service: system_log.write
                  data:
                    message: 'Default hot water circulation - 5 minutes'
                    level: info
        # Start the pump
        - service: switch.turn_on
          target:
            entity_id: switch.shelly1minig3_28372f21c1dc
        - service: system_log.write
          data:
            message: 'Hot water circulation pump started'
            level: info
        # Wait for the determined duration
        - delay: '{{ pump_duration }}'
        # Check if occupancy is still active - extend if needed
        - choose:
            - conditions:
                - condition: or
                  conditions:
                    - condition: state
                      entity_id: binary_sensor.guest_bathroom_occupancy
                      state: 'on'
                    - condition: state
                      entity_id: binary_sensor.half_bathroom_occupancy
                      state: 'on'
                    - condition: state
                      entity_id: binary_sensor.kitchen_occupancy_2
                      state: 'on'
                    - condition: state
                      entity_id: binary_sensor.main_bathroom_occupancy
                      state: 'on'
              sequence:
                - service: system_log.write
                  data:
                    message: 'Occupancy still active - extending circulation by 2 minutes'
                    level: info
                - delay: '00:02:00'  # Extend by 2 minutes
        # Turn off the pump
        - service: switch.turn_off
          target:
            entity_id: switch.shelly1minig3_28372f21c1dc
        - service: system_log.write
          data:
            message: 'Hot water circulation pump stopped'
            level: info

# Temperature monitoring automation (if temperature sensor available)
- id: 'hot_water_temperature_monitor'
  alias: 'Hot Water Temperature Monitor'
  description: 'Monitors water temperature and triggers circulation if needed'
  triggers:
    - platform: numeric_state
      entity_id: sensor.water_heater_temperature  # Adjust entity name as needed
      below: 105  # Fahrenheit - adjust as needed
      for:
        minutes: 5  # Only trigger if temperature stays low for 5 minutes
  conditions:
    # Only run during active hours (6 AM to 10 PM)
    - condition: time
      after: '06:00:00'
      before: '22:00:00'
    # Don't run if pump was recently used
    - condition: state
      entity_id: timer.water_heater_circulator_pump_cooldown
      state: 'idle'
  action:
    - service: system_log.write
      data:
        message: 'Water temperature low - triggering circulation'
        level: warning
    - service: script.adaptive_hot_water_circulation
    - service: timer.start
      target:
        entity_id: timer.water_heater_circulator_pump_cooldown
      data:
        duration: '00:30:00'
  mode: single

# Manual override automation for testing
- id: 'manual_hot_water_circulation'
  alias: 'Manual Hot Water Circulation'
  description: 'Manual trigger for hot water circulation (for testing)'
  triggers:
    - platform: event
      event_type: manual_hot_water_circulation
  action:
    - service: system_log.write
      data:
        message: 'Manual hot water circulation triggered'
        level: info
    - service: script.adaptive_hot_water_circulation
    - service: timer.start
      target:
        entity_id: timer.water_heater_circulator_pump_cooldown
      data:
        duration: '00:30:00'
  mode: single
