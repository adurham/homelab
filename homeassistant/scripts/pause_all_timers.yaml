# Script to pause all running timers
# This script finds all timer entities and pauses them, storing their state

pause_all_timers:
  alias: 'Pause All Timers'
  description: 'Pauses all running timers and stores their state for later resumption'
  fields:
    timer_states:
      description: 'Dictionary to store timer states'
      example: '{"timer.kitchen": "active", "timer.bedroom": "paused"}'
  sequence:
    - alias: 'Get all timer entities'
      service: homeassistant.update_entity
      target:
        entity_id: all
    - alias: 'Initialize timer states storage'
      service: input_text.set_value
      target:
        entity_id: input_text.timer_states
      data:
        value: '{}'
    - alias: 'Pause all running timers'
      repeat:
        for_each: "{{ state_attr('homeassistant', 'all_domains')['timer'] | selectattr('state', 'in', ['active', 'paused']) | list }}"
        sequence:
          - alias: 'Store timer state before pausing'
            service: python_script.store_timer_state
            data:
              entity_id: "{{ repeat.item.entity_id }}"
              state: "{{ repeat.item.state }}"
          - alias: 'Pause timer'
            service: timer.pause
            target:
              entity_id: "{{ repeat.item.entity_id }}"
    - alias: 'Log paused timers count'
      service: system_log.write
      data:
        message: "Paused {{ state_attr('homeassistant', 'all_domains')['timer'] | selectattr('state', 'in', ['active', 'paused']) | list | length }} timers"
        level: info
