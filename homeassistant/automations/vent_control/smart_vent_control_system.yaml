# Main Smart Vent Control System
# Comprehensive vent control based on occupancy, temperature, and Ecobee setpoint

- id: 'smart_vent_control_system'
  alias: 'Smart Vent Control System'
  description: 'Comprehensive vent control based on occupancy, temperature, and Ecobee setpoint'
  triggers:
    # Trigger when occupancy changes in any room
    - platform: state
      entity_id:
        - binary_sensor.kitchen_occupancy_2
        - binary_sensor.living_room_occupancy
        - binary_sensor.main_bedroom_occupancy
        - binary_sensor.guest_bedroom_2_occupancy
        - binary_sensor.main_bathroom_occupancy
        - binary_sensor.laundry_room_occupancy
        - binary_sensor.dining_room_occupancy
      id: occupancy_changed
    # Trigger when temperature changes significantly in any room
    - platform: numeric_state
      entity_id:
        - climate.kitchen_room_3
        - climate.living_room_room_3
        - climate.main_bedroom_room_2
        - climate.guest_bedroom_2_room_2
        - climate.main_bathroom_room_2
        - climate.laundry_room_room_2
        - climate.dining_room_room_2
        - climate.hallway_room_3
      attribute: current_temperature
      above: 0
      below: 200
      for:
        minutes: 5
      id: temperature_changed
    # Periodic check every 15 minutes
    - platform: time_pattern
      minutes: '/15'
      id: periodic_check
  action:
    - service: system_log.write
      data:
        message: 'Starting smart vent control cycle'
        level: info

    # Get Ecobee setpoint and mode
    - variables:
        ecobee_temp: '{{ state_attr("climate.ecobee_thermostat", "temperature") }}'
        ecobee_mode: '{{ states("climate.ecobee_thermostat") }}'
        ecobee_hvac_mode: '{{ state_attr("climate.ecobee_thermostat", "hvac_mode") }}'

    - service: system_log.write
      data:
        message: 'Ecobee: {{ ecobee_mode }} mode, target: {{ ecobee_temp }}Â°F, HVAC: {{ ecobee_hvac_mode }}'
        level: info

    # Control all room vents
    - service: script.control_all_room_vents
      data:
        target_temp: '{{ ecobee_temp }}'
        hvac_mode: '{{ ecobee_hvac_mode }}'

    - service: system_log.write
      data:
        message: 'Smart vent control cycle completed'
        level: info
  mode: restart
